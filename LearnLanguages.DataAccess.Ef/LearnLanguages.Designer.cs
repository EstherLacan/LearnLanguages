//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LearnLanguages", "AssociateLanguageDataWithPhraseData", "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.LanguageData), "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "AssociationUserDataWithPhraseData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "AssociationUserDataWithLanguageData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.UserData), "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.LanguageData))]
[assembly: EdmRelationshipAttribute("LearnLanguages", "AssociationUserDataWithRoleData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.UserData), "RoleData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.RoleData))]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataRoleData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.UserData), "RoleData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.RoleData))]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataPhraseData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "PhraseDataLanguageData", "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData), "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.LanguageData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "TranslationDataPhraseData", "TranslationData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.TranslationData), "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData))]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataTranslationData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "TranslationData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.TranslationData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataLanguageData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.LanguageData), true)]

#endregion

namespace LearnLanguages.DataAccess.Ef
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LearnLanguagesContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LearnLanguagesContext object using the connection string found in the 'LearnLanguagesContext' section of the application configuration file.
        /// </summary>
        public LearnLanguagesContext() : base("name=LearnLanguagesContext", "LearnLanguagesContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LearnLanguagesContext object.
        /// </summary>
        public LearnLanguagesContext(string connectionString) : base(connectionString, "LearnLanguagesContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LearnLanguagesContext object.
        /// </summary>
        public LearnLanguagesContext(EntityConnection connection) : base(connection, "LearnLanguagesContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LanguageData> LanguageDatas
        {
            get
            {
                if ((_LanguageDatas == null))
                {
                    _LanguageDatas = base.CreateObjectSet<LanguageData>("LanguageDatas");
                }
                return _LanguageDatas;
            }
        }
        private ObjectSet<LanguageData> _LanguageDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhraseData> PhraseDatas
        {
            get
            {
                if ((_PhraseDatas == null))
                {
                    _PhraseDatas = base.CreateObjectSet<PhraseData>("PhraseDatas");
                }
                return _PhraseDatas;
            }
        }
        private ObjectSet<PhraseData> _PhraseDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserData> UserDatas
        {
            get
            {
                if ((_UserDatas == null))
                {
                    _UserDatas = base.CreateObjectSet<UserData>("UserDatas");
                }
                return _UserDatas;
            }
        }
        private ObjectSet<UserData> _UserDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleData> RoleDatas
        {
            get
            {
                if ((_RoleDatas == null))
                {
                    _RoleDatas = base.CreateObjectSet<RoleData>("RoleDatas");
                }
                return _RoleDatas;
            }
        }
        private ObjectSet<RoleData> _RoleDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TranslationData> TranslationDatas
        {
            get
            {
                if ((_TranslationDatas == null))
                {
                    _TranslationDatas = base.CreateObjectSet<TranslationData>("TranslationDatas");
                }
                return _TranslationDatas;
            }
        }
        private ObjectSet<TranslationData> _TranslationDatas;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LanguageDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguageDatas(LanguageData languageData)
        {
            base.AddObject("LanguageDatas", languageData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhraseDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhraseDatas(PhraseData phraseData)
        {
            base.AddObject("PhraseDatas", phraseData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDatas(UserData userData)
        {
            base.AddObject("UserDatas", userData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleDatas(RoleData roleData)
        {
            base.AddObject("RoleDatas", roleData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TranslationDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTranslationDatas(TranslationData translationData)
        {
            base.AddObject("TranslationDatas", translationData);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="LanguageData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LanguageData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="userDataId">Initial value of the UserDataId property.</param>
        public static LanguageData CreateLanguageData(global::System.Guid id, global::System.String text, global::System.Guid userDataId)
        {
            LanguageData languageData = new LanguageData();
            languageData.Id = id;
            languageData.Text = text;
            languageData.UserDataId = userDataId;
            return languageData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDataId
        {
            get
            {
                return _UserDataId;
            }
            set
            {
                OnUserDataIdChanging(value);
                ReportPropertyChanging("UserDataId");
                _UserDataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserDataId");
                OnUserDataIdChanged();
            }
        }
        private global::System.Guid _UserDataId;
        partial void OnUserDataIdChanging(global::System.Guid value);
        partial void OnUserDataIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataLanguageData", "PhraseData")]
        public EntityCollection<PhraseData> PhraseDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhraseData>("LearnLanguages.PhraseDataLanguageData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhraseData>("LearnLanguages.PhraseDataLanguageData", "PhraseData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataLanguageData", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataLanguageData", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataLanguageData", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataLanguageData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("LearnLanguages.UserDataLanguageData", "UserData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="PhraseData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhraseData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhraseData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="userDataId">Initial value of the UserDataId property.</param>
        /// <param name="languageDataId">Initial value of the LanguageDataId property.</param>
        public static PhraseData CreatePhraseData(global::System.Guid id, global::System.String text, global::System.Guid userDataId, global::System.Guid languageDataId)
        {
            PhraseData phraseData = new PhraseData();
            phraseData.Id = id;
            phraseData.Text = text;
            phraseData.UserDataId = userDataId;
            phraseData.LanguageDataId = languageDataId;
            return phraseData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDataId
        {
            get
            {
                return _UserDataId;
            }
            set
            {
                OnUserDataIdChanging(value);
                ReportPropertyChanging("UserDataId");
                _UserDataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserDataId");
                OnUserDataIdChanged();
            }
        }
        private global::System.Guid _UserDataId;
        partial void OnUserDataIdChanging(global::System.Guid value);
        partial void OnUserDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LanguageDataId
        {
            get
            {
                return _LanguageDataId;
            }
            set
            {
                OnLanguageDataIdChanging(value);
                ReportPropertyChanging("LanguageDataId");
                _LanguageDataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageDataId");
                OnLanguageDataIdChanged();
            }
        }
        private global::System.Guid _LanguageDataId;
        partial void OnLanguageDataIdChanging(global::System.Guid value);
        partial void OnLanguageDataIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataPhraseData", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataPhraseData", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataPhraseData", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataPhraseData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("LearnLanguages.UserDataPhraseData", "UserData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataLanguageData", "LanguageData")]
        public LanguageData LanguageData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageData>("LearnLanguages.PhraseDataLanguageData", "LanguageData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageData>("LearnLanguages.PhraseDataLanguageData", "LanguageData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageData> LanguageDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageData>("LearnLanguages.PhraseDataLanguageData", "LanguageData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageData>("LearnLanguages.PhraseDataLanguageData", "LanguageData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "TranslationDataPhraseData", "TranslationData")]
        public EntityCollection<TranslationData> TranslationDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TranslationData>("LearnLanguages.TranslationDataPhraseData", "TranslationData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TranslationData>("LearnLanguages.TranslationDataPhraseData", "TranslationData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="RoleData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static RoleData CreateRoleData(global::System.Guid id, global::System.String text)
        {
            RoleData roleData = new RoleData();
            roleData.Id = id;
            roleData.Text = text;
            return roleData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataRoleData", "UserData")]
        public EntityCollection<UserData> UserDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserData>("LearnLanguages.UserDataRoleData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserData>("LearnLanguages.UserDataRoleData", "UserData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="TranslationData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TranslationData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TranslationData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userDataId">Initial value of the UserDataId property.</param>
        public static TranslationData CreateTranslationData(global::System.Guid id, global::System.Guid userDataId)
        {
            TranslationData translationData = new TranslationData();
            translationData.Id = id;
            translationData.UserDataId = userDataId;
            return translationData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDataId
        {
            get
            {
                return _UserDataId;
            }
            set
            {
                OnUserDataIdChanging(value);
                ReportPropertyChanging("UserDataId");
                _UserDataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserDataId");
                OnUserDataIdChanged();
            }
        }
        private global::System.Guid _UserDataId;
        partial void OnUserDataIdChanging(global::System.Guid value);
        partial void OnUserDataIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "TranslationDataPhraseData", "PhraseData")]
        public EntityCollection<PhraseData> PhraseDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhraseData>("LearnLanguages.TranslationDataPhraseData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhraseData>("LearnLanguages.TranslationDataPhraseData", "PhraseData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataTranslationData", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataTranslationData", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataTranslationData", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataTranslationData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("LearnLanguages.UserDataTranslationData", "UserData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="UserData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="salt">Initial value of the Salt property.</param>
        /// <param name="saltedHashedPasswordValue">Initial value of the SaltedHashedPasswordValue property.</param>
        /// <param name="nativeLanguageText">Initial value of the NativeLanguageText property.</param>
        public static UserData CreateUserData(global::System.Guid id, global::System.String username, global::System.Int32 salt, global::System.String saltedHashedPasswordValue, global::System.String nativeLanguageText)
        {
            UserData userData = new UserData();
            userData.Id = id;
            userData.Username = username;
            userData.Salt = salt;
            userData.SaltedHashedPasswordValue = saltedHashedPasswordValue;
            userData.NativeLanguageText = nativeLanguageText;
            return userData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Salt
        {
            get
            {
                return _Salt;
            }
            set
            {
                OnSaltChanging(value);
                ReportPropertyChanging("Salt");
                _Salt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salt");
                OnSaltChanged();
            }
        }
        private global::System.Int32 _Salt;
        partial void OnSaltChanging(global::System.Int32 value);
        partial void OnSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SaltedHashedPasswordValue
        {
            get
            {
                return _SaltedHashedPasswordValue;
            }
            set
            {
                OnSaltedHashedPasswordValueChanging(value);
                ReportPropertyChanging("SaltedHashedPasswordValue");
                _SaltedHashedPasswordValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SaltedHashedPasswordValue");
                OnSaltedHashedPasswordValueChanged();
            }
        }
        private global::System.String _SaltedHashedPasswordValue;
        partial void OnSaltedHashedPasswordValueChanging(global::System.String value);
        partial void OnSaltedHashedPasswordValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NativeLanguageText
        {
            get
            {
                return _NativeLanguageText;
            }
            set
            {
                OnNativeLanguageTextChanging(value);
                ReportPropertyChanging("NativeLanguageText");
                _NativeLanguageText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NativeLanguageText");
                OnNativeLanguageTextChanged();
            }
        }
        private global::System.String _NativeLanguageText;
        partial void OnNativeLanguageTextChanging(global::System.String value);
        partial void OnNativeLanguageTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataRoleData", "RoleData")]
        public EntityCollection<RoleData> RoleDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleData>("LearnLanguages.UserDataRoleData", "RoleData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleData>("LearnLanguages.UserDataRoleData", "RoleData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataPhraseData", "PhraseData")]
        public EntityCollection<PhraseData> PhraseDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhraseData>("LearnLanguages.UserDataPhraseData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhraseData>("LearnLanguages.UserDataPhraseData", "PhraseData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataTranslationData", "TranslationData")]
        public EntityCollection<TranslationData> TranslationDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TranslationData>("LearnLanguages.UserDataTranslationData", "TranslationData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TranslationData>("LearnLanguages.UserDataTranslationData", "TranslationData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataLanguageData", "LanguageData")]
        public EntityCollection<LanguageData> LanguageDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LanguageData>("LearnLanguages.UserDataLanguageData", "LanguageData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LanguageData>("LearnLanguages.UserDataLanguageData", "LanguageData", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
