//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LearnLanguages", "AssociateLanguageDataWithPhraseData", "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.LanguageData), "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData), true)]

#endregion

namespace LearnLanguages.DataAccess.Ef
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LearnLanguagesContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LearnLanguagesContext object using the connection string found in the 'LearnLanguagesContext' section of the application configuration file.
        /// </summary>
        public LearnLanguagesContext() : base("name=LearnLanguagesContext", "LearnLanguagesContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LearnLanguagesContext object.
        /// </summary>
        public LearnLanguagesContext(string connectionString) : base(connectionString, "LearnLanguagesContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LearnLanguagesContext object.
        /// </summary>
        public LearnLanguagesContext(EntityConnection connection) : base(connection, "LearnLanguagesContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LanguageData> LanguageDatas
        {
            get
            {
                if ((_LanguageDatas == null))
                {
                    _LanguageDatas = base.CreateObjectSet<LanguageData>("LanguageDatas");
                }
                return _LanguageDatas;
            }
        }
        private ObjectSet<LanguageData> _LanguageDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhraseData> PhraseDatas
        {
            get
            {
                if ((_PhraseDatas == null))
                {
                    _PhraseDatas = base.CreateObjectSet<PhraseData>("PhraseDatas");
                }
                return _PhraseDatas;
            }
        }
        private ObjectSet<PhraseData> _PhraseDatas;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LanguageDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguageDatas(LanguageData languageData)
        {
            base.AddObject("LanguageDatas", languageData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhraseDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhraseDatas(PhraseData phraseData)
        {
            base.AddObject("PhraseDatas", phraseData);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="LanguageData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LanguageData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static LanguageData CreateLanguageData(global::System.Guid id, global::System.String text)
        {
            LanguageData languageData = new LanguageData();
            languageData.Id = id;
            languageData.Text = text;
            return languageData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="PhraseData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhraseData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhraseData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="languageDataId">Initial value of the LanguageDataId property.</param>
        public static PhraseData CreatePhraseData(global::System.Guid id, global::System.String text, global::System.Guid languageDataId)
        {
            PhraseData phraseData = new PhraseData();
            phraseData.Id = id;
            phraseData.Text = text;
            phraseData.LanguageDataId = languageDataId;
            return phraseData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LanguageDataId
        {
            get
            {
                return _LanguageDataId;
            }
            set
            {
                OnLanguageDataIdChanging(value);
                ReportPropertyChanging("LanguageDataId");
                _LanguageDataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageDataId");
                OnLanguageDataIdChanged();
            }
        }
        private global::System.Guid _LanguageDataId;
        partial void OnLanguageDataIdChanging(global::System.Guid value);
        partial void OnLanguageDataIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "AssociateLanguageDataWithPhraseData", "LanguageData")]
        public LanguageData LanguageData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageData>("LearnLanguages.AssociateLanguageDataWithPhraseData", "LanguageData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageData>("LearnLanguages.AssociateLanguageDataWithPhraseData", "LanguageData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageData> LanguageDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageData>("LearnLanguages.AssociateLanguageDataWithPhraseData", "LanguageData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageData>("LearnLanguages.AssociateLanguageDataWithPhraseData", "LanguageData", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
